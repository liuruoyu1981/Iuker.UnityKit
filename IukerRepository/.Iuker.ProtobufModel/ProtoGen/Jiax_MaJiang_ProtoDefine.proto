message CTS_Table_ActInTableMsg
{
    optional int64 tableId = 1;
}

message CTS_Table_CreateMsg
{
    optional int32 gameId = 1;
    optional int64 tableId = 2;
    optional string tableName = 3;
    optional int32 handNum = 4;
    optional int32 postionNum = 5;
    optional int32 roomType = 6;
    optional string gameTypes = 7;
    optional int32 startPoint = 8;
    optional int32 specialType = 9;
}

message CTS_Table_DissolveRequestMsg
{
    optional int64 tableId = 1;
}

message CTS_Table_DissolveVoteMsg
{
    optional int64 tableId = 1;
    optional int32 vote = 2;
}

message CTS_Table_HeartbeatMsg
{
    optional int64 tableId = 1;
}

message STC_TableSettleMsg
{
    repeated PlayerGrade gradeList = 1;
    optional int64 tableId = 2;
    optional string tableName = 3;
    optional int64 createTime = 4;
    optional int64 finishTime = 5;
    optional int32 seatNum = 6;
}

message PlayerGrade
{
    optional string avatar = 1;
    optional string nickName = 2;
    optional int64 userId = 3;
    optional int32 posId = 4;
    optional int32 winCount = 5;
    optional int32 loseCount = 6;
    optional int32 tieCount = 7;
    optional int32 chengbaoCount = 8;
    optional int32 handMaxGrade = 9;
    optional string fangtai = 10;
    optional int32 gradeCount = 11;
    optional int32 isMaster = 12;
    optional int32 isWinMax = 13;
}

message STC_Table_ActInTableMsg
{
    optional int64 tableId = 1;
    optional int64 password = 2;
    optional string tableName = 3;
    optional int32 handNum = 4;
    optional int32 postionNum = 5;
    optional int32 roomType = 6;
    optional string gameTypes = 7;
    optional int32 startPoint = 8;
    repeated SimplePlayer playerList = 9;
    optional TeoError error = 10;
    optional int32 specialType = 11;
}

message TeoError
{
    optional int32 errId = 1;
    optional string errMsg = 2;
    optional bool isShow = 3;
}

message SimplePlayer
{
    optional int64 userId = 1;
    optional int32 gender = 2;
    optional string nickName = 3;
    optional string headImg = 4;
    optional int32 posId = 5;
    optional int32 status = 6;
    optional int32 online = 7;
    optional string ip = 8;
    optional int32 gameCount = 9;
    optional double latitude = 10;
    optional double longitude = 11;
    optional string address = 12;
}

message STC_Table_ActInTable_PublishMsg
{
    optional int64 tableId = 1;
    optional int32 posId = 2;
    optional SimplePlayer player = 3;
}

message STC_Table_CreateMsg
{
    optional int32 gameId = 1;
    optional int64 tableId = 2;
    optional string tableName = 3;
    optional int32 handNum = 4;
    optional int32 postionNum = 5;
    optional int32 roomType = 6;
    optional string gameTypes = 7;
    optional int32 startPoint = 8;
    optional int32 specialType = 9;
    optional CreateResult createResult = 10;
    optional TeoError error = 11;
}

message CreateResult
{
    optional int64 masterId = 1;
    optional int32 password = 2;
    optional int64 tableId = 3;
    optional int64 createTime = 4;
}

message STC_Table_DissolveRequestMsg
{
    optional int64 tableId = 1;
    optional int64 userId = 2;
    optional string nickName = 3;
    optional TeoError error = 4;
    optional int32 result = 5;
}

message STC_Table_DissolveResultMsg
{
    optional int64 tableId = 1;
    optional int32 result = 2;
}

message STC_Table_DissolveVoteMsg
{
    optional int64 tableId = 1;
    optional int64 reqUserId = 2;
    optional string reqNickName = 3;
}

message STC_Table_DissolveVoteResultMsg
{
    optional int64 tableId = 1;
    optional int32 result = 2;
    optional int64 userId = 3;
}

message STC_Table_HeartbeatMsg
{
    optional int64 tableId = 1;
}

message CTS_ReadyMsg
{
    optional int64 tableId = 1;
    optional int32 value = 2;
}

message STC_ReadyMsg
{
    optional int64 tableId = 1;
    optional int32 value = 2;
    optional int32 posId = 3;
}

message STC_StartMsg
{
    optional int64 tableId = 1;
    optional int32 bankId = 2;
    optional int32 handId = 3;
    optional int32 bePosId = 4;
    repeated int32 priCards = 5;
    repeated int32 cardSize = 6;
    optional int32 guiIndex = 7;
    repeated int32 dices = 8;
    optional int32 cardSurplus = 9;
    optional int32 handNum = 10;
    optional int32 quan = 11;
}

message CTS_OperateMsg
{
    optional int64 tableId = 1;
    optional int32 action = 2;
    repeated int32 cards = 3;
}

message STC_OperateMsg
{
    optional int64 tableId = 1;
    optional int32 posId = 2;
    optional int32 action = 3;
    optional int32 targetCardPosId = 4;
    optional int32 targetCard = 5;
    repeated int32 otherCards = 6;
    repeated int32 cards = 7;
    optional int32 nextPosId = 8;
    optional int32 cardSurplus = 9;
}

message STC_OperateNoticeMsg
{
    optional int64 tableId = 1;
    optional int32 posId = 2;
    optional int32 action = 3;
    repeated int32 beCards = 4;
    optional int32 fromPosId = 5;
    repeated CardList cardList = 6;
}

message CardList
{
    repeated int32 toCards = 1;
}

message STC_Table_User_OnlineMsg
{
    optional int64 tableId = 1;
    optional int32 status = 2;
    optional int32 posId = 3;
}

message CTS_Table_QuitMsg
{
    optional int64 tableId = 1;
}

message STC_Table_Quit_NotificaMsg
{
    optional int64 tableId = 1;
    optional int32 posId = 2;
    repeated SimplePlayer playerList = 3;
}

message STC_Table_Quit_ResultMsg
{
    optional int64 tableId = 1;
    optional bool success = 2;
}

message CTS_OfflineMsg
{
    optional int64 tableId = 1;
}

message CTS_ChengBaoMsg
{
    optional int64 tableId = 1;
    optional int32 fromPosId = 2;
    optional int32 toPosId = 3;
    optional int32 value = 4;
}

message STC_ChengBaoMsg
{
    optional int64 tableId = 1;
    optional int32 fromPosId = 2;
    optional int32 toPosId = 3;
    optional int32 posId = 4;
    optional int32 value = 5;
}

message STC_ChengBaoResultMsg
{
    optional int64 tableId = 1;
    repeated int32 valueList = 2;
}

message CTS_ContinueMsg
{
    optional int64 tableId = 1;
}

message STC_ContinueMsg
{
    optional int64 tableId = 1;
    optional int64 password = 2;
    optional string tableName = 3;
    optional int32 handNum = 4;
    optional int32 postionNum = 5;
    optional int32 gameStatus = 6;
    repeated int32 readyStatus = 7;
    repeated int32 scoreList = 8;
    repeated SimplePlayer playerList = 9;
    optional int32 nextPosId = 10;
    optional int32 specialType = 11;
    optional bool isBeOut = 12;
    optional int32 bankId = 13;
    optional int32 handId = 14;
    repeated OPosIdCardInfo cpgList = 15;
    optional int32 guiIndex = 16;
    repeated int32 dices = 17;
    optional int32 cardSurplus = 18;
    optional int32 quan = 19;
    optional int32 roomType = 20;
    optional string gameTypes = 21;
    optional int32 startPoint = 22;
}

message OPosIdCardInfo
{
    optional int32 posId = 1;
    repeated OCardAction actionList = 2;
    repeated int32 outCardList = 3;
    optional int32 cardSize = 4;
    repeated int32 priCards = 5;
}

message OCardAction
{
    optional int32 userPosId = 1;
    optional int32 action = 2;
    optional int32 targetCard = 3;
    optional int32 targetCardPosId = 4;
    repeated int32 cpgCards = 5;
}

message STC_SettleMsg
{
    repeated SettleItem settleLst = 1;
    optional int64 tableId = 2;
    optional int32 roomType = 3;
    optional string gameTypes = 4;
    optional int32 startPoint = 5;
    optional int32 guiCard = 6;
    optional int32 handNum = 7;
    optional int32 quan = 8;
    optional int32 handId = 9;
    optional string dateDesc = 10;
}

message SettleItem
{
    repeated int32 otherCards = 1;
    repeated int32 handCards = 2;
    optional int32 posId = 3;
    optional bool isBank = 4;
    optional bool isWin = 5;
    optional int32 winCard = 6;
    optional int32 sumScore = 7;
    optional string scoreDesc = 8;
    optional string bankDirection = 9;
}

message STC_OfflineMsg
{
    repeated int32 chengbaoList = 1;
    repeated int32 dices = 2;
    repeated int32 readyStatus = 3;
    repeated int32 scoreList = 4;
    repeated SimplePlayer playerList = 5;
    optional int64 tableId = 6;
    optional int64 password = 7;
    optional string tableName = 8;
    optional int32 handNum = 9;
    optional int32 postionNum = 10;
    optional int32 gameStatus = 11;
    repeated OPosIdCardInfo cpgList = 12;
    optional int32 nextPosId = 13;
    optional int32 specialType = 14;
    optional bool isBeOut = 15;
    optional int32 bankId = 16;
    optional int32 handId = 17;
    optional int32 guiIndex = 18;
    optional int32 cardSurplus = 19;
    optional int32 quan = 20;
    optional int32 roomType = 21;
    optional string gameTypes = 22;
    optional int32 startPoint = 23;
}

